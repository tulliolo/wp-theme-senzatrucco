<?php
/**
 * Custom functions that act independently of the theme templates.
 *
 * Eventually, some of the functionality here could be replaced by core features.
 *
 * @package Senza Trucco
 */
 
if ( ! function_exists( 'senza_trucco_featured_slideshow' ) ) :
/**
 * Show a slideshow of featured content.
 * Featured content is identified by a category and a page.
 */
function senza_trucco_featured_slideshow() {
	$slideord = 'date';
	if ( senza_trucco_get_option( 'senza_trucco_slider_randord' ) == 1 ) :
		$slideord = 'rand';
	endif;

	$featpage = get_post( senza_trucco_get_option( 'senza_trucco_slider_featured_page' ) );
	$featquery = new WP_Query( array( 
		'cat' => senza_trucco_get_option( 'senza_trucco_slider_featured_category' ), 
		'nopaging' => true, 'orderby' => $slideord ) );

	if ( ( $featquery->have_posts() ) && !( is_null( $featpage ) ) ) :
		global $post;
		$post = $featpage;
		setup_postdata( $post );
	?>

	<article id="featured-post-<?php the_ID(); ?>" <?php post_class( 'featured-post post-summary' ); ?>>
		<?php the_title( sprintf( '<h3 class="entry-title"><a href="%s" rel="bookmark">', esc_url( get_permalink() ) ), '</a></h3>' ); ?>
		<div class="flexslider">
			<ul class="slides">
		
	<?php
		while ( $featquery->have_posts() ) :
			$featquery->the_post();
			if ( has_post_thumbnail() ) :
	?>
		
				<li>
					
	<?php
				$post = $featpage;
				setup_postdata( $post );
	?>

					<div class="flex-caption">
						<?php the_title( sprintf( '<h3 class="entry-title"><a href="%s" rel="bookmark">', esc_url( get_permalink() ) ), '</a></h3>' ); ?>
						
						<div class="entry-summary">
							<?php the_excerpt(); ?>
						</div><!-- .entry-summary -->	
					</div><!-- .flex-caption -->
						
	<?php
				$featquery->reset_postdata();
	?>

					<a href="<?php the_permalink(); ?>">
						<?php the_post_thumbnail( 'senza_trucco_slider_thumb' ); ?>
					</a>
					
					<div class="flex-caption">
						<article id="featured-post-<?php the_ID(); ?>" <?php post_class( 'featured-post post-summary' ); ?>>
							<div class="entry-summary">
								<?php the_excerpt(); ?>
							</div><!-- .entry-summary -->
							
							<?php the_title( sprintf( '<h3 class="entry-title"><a href="%s" rel="bookmark">', esc_url( get_permalink() ) ), '</a></h3>' ); ?>
						</article><!-- #featured-post-## -->
					</div><!-- .flex-caption -->
				</li>
				
	<?php
			endif;
		endwhile;
		wp_reset_query();
	?>

			</ul>
		</div><!-- .flexslider -->

	<?php
		$post = $featpage;
		setup_postdata( $post );
	?>
		
		<div class="entry-summary">
				<?php the_excerpt(); ?>
		</div><!-- .entry-summary -->
	</article><!-- #featured-post-## -->

	<?php
		wp_reset_postdata();
	endif;
}
endif;
 
if ( ! function_exists( 'senza_trucco_post_slideshow' ) ) :
/**
 * Shows a slideshow of the images attached to the current post.
 * 
 * @param the post id.
 */
function senza_trucco_post_slideshow( $post_id ) {
	$slideord = 'date';
	if ( senza_trucco_get_option( 'senza_trucco_slider_randord' ) == 1 ) :
		$slideord = 'rand';
	endif;

	$images = get_children( array( 'post_parent' => $post_id, 'post_status' => 'inherit', 'post_type' => 'attachment', 'post_mime_type' => 'image', 'orderby' => $slideord ) );

	if ( $images ) :
		
		?>
		<div class='flexslider'>
			<ul class="slides">
		<?php
		
		foreach ($images as $attachment_id => $image) :

			if ( $image->ID ) :
				?><li><?php
				echo wp_get_attachment_image( $image->ID, 'senza_trucco_slider_thumb' );
				?></li><?php
			endif; 
		endforeach;
		
		?>
			</ul><!-- .slides -->
		</div><!-- .flexslider -->
	<?php

	endif;
}
endif;

/**
 * Adds custom classes to the array of body classes.
 *
 * @param array $classes Classes for the body element.
 * @return array
 */
function senza_trucco_body_classes( $classes ) {
	// Adds a class of group-blog to blogs with more than 1 published author.
	if ( is_multi_author() ) {
		$classes[] = 'group-blog';
	}

	// Adds a class of hfeed to non-singular pages.
	if ( ! is_singular() ) {
		$classes[] = 'hfeed';
	}

	return $classes;
}
add_filter( 'body_class', 'senza_trucco_body_classes' );

/**
 * Add a pingback url auto-discovery header for singularly identifiable articles.
 */
function senza_trucco_pingback_header() {
	if ( is_singular() && pings_open() ) {
		echo '<link rel="pingback" href="', bloginfo( 'pingback_url' ), '">';
	}
}
add_action( 'wp_head', 'senza_trucco_pingback_header' );

/**
 * Adds button class to links generated by next_posts_link and previous_posts_link
 */
function senza_trucco_posts_link_attributes() {
    return 'class="pushbutton"';
}
add_filter('next_posts_link_attributes', 'senza_trucco_posts_link_attributes');
add_filter('previous_posts_link_attributes', 'senza_trucco_posts_link_attributes');

/**
 * Adds button class to links generated by next_post_link and previous_post_link
 */
function senza_trucco_post_link_attributes($output) {
    $code = 'class="pushbutton"';
    return str_replace('<a href=', '<a '.$code.' href=', $output);
}
add_filter('next_post_link', 'senza_trucco_post_link_attributes');
add_filter('previous_post_link', 'senza_trucco_post_link_attributes');

/**
 * Adds button class to links generated by next_comments_link and previous_comments_link
 */
function senza_trucco_comments_link_attributes() {
    return 'class="pushbutton"';
}
add_filter('next_comments_link_attributes', 'senza_trucco_comments_link_attributes');
add_filter('previous_comments_link_attributes', 'senza_trucco_comments_link_attributes');

/*****************************
 * Add Helper Functions here *
 *****************************/
 
if ( ! function_exists( 'senza_trucco_get_option' ) ) :
/**
 * Helper function to return the theme option value.
 * If no value has been saved, it returns $default.
 * Needed because options are saved as serialized strings.
 *
 * Not in a class to support backwards compatibility in themes.
 *
 * @package Senza Trucco
 */
function senza_trucco_get_option( $name, $default = false ) {
	$option_name = '';
	// Get option settings from database
	$options = get_option( 'senza-trucco' );

	// Return specific option
	if ( isset( $options[$name] ) ) {
	return $options[$name];
	}

	return $default;
}
endif;

if ( ! function_exists( 'senza_trucco_add_image_size' ) ) :
/*
 * Helper function to register new responsive image sizes for post thumbnails.
 * You may upload full resolution images for thumbnails.
 * Many variants with the same aspect ratio will be generated.
 *
 * @package Senza Trucco
 */
function senza_trucco_add_image_size( $name, $width, $height, $crop ) {
	$aspect_ratio = $width / $height;
	add_image_size( $name, $width, $height, $crop );
	add_image_size( $name . '_xsmall', 320, absint( 320 / $aspect_ratio ), $crop );
	add_image_size( $name . '_small', 480, absint( 480 / $aspect_ratio ), $crop );
	add_image_size( $name . '_medium', 640, absint( 640 / $aspect_ratio ), $crop );
	add_image_size( $name . '_mlarge', 768, absint( 768 / $aspect_ratio ), $crop );
	add_image_size( $name . '_large', 800, absint( 800 / $aspect_ratio ), $crop );
	add_image_size( $name . '_xlarge', 1024, absint( 1024 / $aspect_ratio ), $crop );
	add_image_size( $name . '_hdready', 1280, absint( 1280 / $aspect_ratio ), $crop );
	add_image_size( $name . '_fullhd', 1920, absint( 1920 / $aspect_ratio ), $crop );
	add_image_size( $name . '_ultrahd', 3840, absint( 3840 / $aspect_ratio ), $crop );
}
endif;

/**
 * Helper function to convert hexdec color string to rgb(a) string 
 */
function hex2rgba( $color, $opacity = false ) {

	$default = 'rgb(0,0,0)';

	// Return default if no color provided
	if( empty( $color ))
          return $default; 

	// Sanitize $color if "#" is provided 
	if ( $color[0] == '#' ) {
		$color = substr( $color, 1 );
	}

	// Check if color has 6 or 3 characters and get values
	if ( strlen( $color ) == 6 ) {
		$hex = array( $color[0] . $color[1], $color[2] . $color[3], $color[4] . $color[5] );
	} elseif ( strlen( $color ) == 3 ) {
		$hex = array( $color[0] . $color[0], $color[1] . $color[1], $color[2] . $color[2] );
	} else {
		return $default;
	}

	// Convert hexadec to rgb
	$rgb =  array_map( 'hexdec', $hex );

	// Check if opacity is set(rgba or rgb)
	if( $opacity ) {
		if( abs( $opacity ) > 1 )
			$opacity = 1.0;
		$output = 'rgba(' . implode( ",", $rgb ) . ','.$opacity.')';
	} else {
		$output = 'rgb(' . implode( ",", $rgb ) . ')';
	}

	// Return rgb(a) color string
	return $output;
}

/**
 * Helper function to check if a string is empty
 */
function is_empty( $str ) {
    return trim(str_replace('&nbsp;','',strip_tags($str))) == '';
}